{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/brandi/Documents/Code_Stuff/NGT/sportsbook-app-demo/sportsbook-app/src/navigation/Tabs.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Game, GameList, SportSelector, Team, HomeScreen, ProfileScreen, RewardsScreen, BetslipScreen, FavoritesScreen } from \"../components/Exports\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from '@expo/vector-icons';\nvar Tab = createBottomTabNavigator();\n\nvar CustomTabBarButton = function CustomTabBarButton(_ref) {\n  var children = _ref.children,\n      onPress = _ref.onPress;\n  return React.createElement(TouchableOpacity, {\n    style: {\n      top: 10,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 60,\n      height: 60,\n      borderRadius: 50,\n      backgroundColor: '#4cfa07'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, children));\n};\n\nvar Tabs = function Tabs() {\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: _objectSpread({\n        position: 'absolute',\n        elevation: 0,\n        backgroundColor: '#161616',\n        height: 90\n      }, styles.shadow)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 22\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }, React.createElement(Ionicons, {\n          name: \"home\",\n          size: 28,\n          color: \"#fff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        })), React.createElement(Text, {\n          style: styles.whiteText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }, \"Home\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Favorites\",\n    component: FavoritesScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }\n        }, React.createElement(Ionicons, {\n          name: \"star\",\n          size: 28,\n          color: \"#fff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }\n        })), React.createElement(Text, {\n          style: styles.whiteText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }\n        }, \"Favorites\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Betslip\",\n    component: BetslipScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }\n        }, React.createElement(Ionicons, {\n          name: \"receipt\",\n          size: 40,\n          color: \"#161616\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }\n        }));\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(CustomTabBarButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Rewards\",\n    component: RewardsScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }\n        }, React.createElement(Ionicons, {\n          name: \"ribbon\",\n          size: 28,\n          color: \"#fff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        })), React.createElement(Text, {\n          style: styles.whiteText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        }, \"Rewards\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        }, React.createElement(Ionicons, {\n          name: \"person-circle-sharp\",\n          size: 28,\n          color: \"#fff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }\n        })), React.createElement(Text, {\n          style: styles.whiteText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        }, \"Profile\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: '#7f5df0',\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.24,\n    shadowRadius: 3.6,\n    elevation: 5\n  },\n  whiteText: {\n    color: '#fff',\n    fontSize: 10\n  }\n});\nexport default Tabs;\n{}","map":{"version":3,"sources":["/Users/brandi/Documents/Code_Stuff/NGT/sportsbook-app-demo/sportsbook-app/src/navigation/Tabs.jsx"],"names":["React","createBottomTabNavigator","Game","GameList","SportSelector","Team","HomeScreen","ProfileScreen","RewardsScreen","BetslipScreen","FavoritesScreen","Ionicons","Tab","CustomTabBarButton","children","onPress","top","justifyContent","alignItems","width","height","borderRadius","backgroundColor","Tabs","showLabel","style","position","elevation","styles","shadow","tabBarIcon","focused","whiteText","tabBarButton","props","StyleSheet","create","shadowColor","shadowOffset","shadowOpacity","shadowRadius","color","fontSize"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,IAAxC,EAA8CC,UAA9C,EAA0DC,aAA1D,EAAyEC,aAAzE,EAAwFC,aAAxF,EAAuGC,eAAvG;;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,IAAMC,GAAG,GAAGX,wBAAwB,EAApC;;AAEA,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,OAAZ,QAAYA,OAAZ;AAAA,SACvB,oBAAC,gBAAD;AACA,IAAA,KAAK,EAAE;AACHC,MAAAA,GAAG,EAAE,EADF;AAEHC,MAAAA,cAAc,EAAE,QAFb;AAGHC,MAAAA,UAAU,EAAE;AAHT,KADP;AAMA,IAAA,OAAO,EAAEH,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTI,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,eAAe,EAAE;AAJR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKR,QANL,CAPJ,CADuB;AAAA,CAA3B;;AAmBA,IAAMS,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEf,SACI,oBAAC,GAAD,CAAK,SAAL;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,KAAK;AACDC,QAAAA,QAAQ,EAAE,UADT;AAKDC,QAAAA,SAAS,EAAE,CALV;AAMDL,QAAAA,eAAe,EAAE,SANhB;AAQDF,QAAAA,MAAM,EAAE;AARP,SASEQ,MAAM,CAACC,MATT;AAFM,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEvB,UAAnC;AAA+C,IAAA,OAAO,EAAE;AACpDwB,MAAAA,UAAU,EAAE;AAAA,YAAEC,OAAF,SAAEA,OAAF;AAAA,eACP,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACb,YAAAA,UAAU,EAAE,QAAb;AAAuBD,YAAAA,cAAc,EAAE,QAAvC;AAAiDD,YAAAA,GAAG,EAAE;AAAtD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,MAAf;AAAsB,UAAA,IAAI,EAAE,EAA5B;AAAgC,UAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADH,EAIG,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEY,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJH,CADO;AAAA;AADwC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EA4BgB,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,WAAjB;AAA6B,IAAA,SAAS,EAAEtB,eAAxC;AAAyD,IAAA,OAAO,EAAE;AAC1EoB,MAAAA,UAAU,EAAE;AAAA,YAAEC,OAAF,SAAEA,OAAF;AAAA,eACR,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACb,YAAAA,UAAU,EAAE,QAAb;AAAuBD,YAAAA,cAAc,EAAE,QAAvC;AAAiDD,YAAAA,GAAG,EAAE;AAAtD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,MAAf;AAAsB,UAAA,IAAI,EAAE,EAA5B;AAAgC,UAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADA,EAIA,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEY,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJA,CADQ;AAAA;AAD8D,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BhB,EAwCI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAEvB,aAAtC;AAAqD,IAAA,OAAO,EAAE;AAC1DqB,MAAAA,UAAU,EAAE;AAAA,YAAEC,OAAF,SAAEA,OAAF;AAAA,eACR,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,SAAf;AAAyB,UAAA,IAAI,EAAE,EAA/B;AAAmC,UAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADQ;AAAA,OAD8C;AAO1DE,MAAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,eACV,oBAAC,kBAAD,eAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADU;AAAA;AAP4C,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCJ,EAsDQ,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAE1B,aAAtC;AAAqD,IAAA,OAAO,EAAE;AAC9DsB,MAAAA,UAAU,EAAE;AAAA,YAAEC,OAAF,SAAEA,OAAF;AAAA,eACR,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACb,YAAAA,UAAU,EAAE,QAAb;AAAuBD,YAAAA,cAAc,EAAE,QAAvC;AAAiDD,YAAAA,GAAG,EAAE;AAAtD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,QAAf;AAAwB,UAAA,IAAI,EAAE,EAA9B;AAAkC,UAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADA,EAIA,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEY,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJA,CADQ;AAAA;AADkD,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtDR,EAmEI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAEzB,aAAtC;AAAqD,IAAA,OAAO,EAAE;AAC1DuB,MAAAA,UAAU,EAAE;AAAA,YAAEC,OAAF,SAAEA,OAAF;AAAA,eACR,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACb,YAAAA,UAAU,EAAE,QAAb;AAAuBD,YAAAA,cAAc,EAAE,QAAvC;AAAiDD,YAAAA,GAAG,EAAE;AAAtD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,qBAAf;AAAqC,UAAA,IAAI,EAAE,EAA3C;AAA+C,UAAA,KAAK,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,EAII,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEY,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,CADQ;AAAA;AAD8C,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnEJ,CADJ;AAoFH,CAtFD;;AAwFA,IAAMJ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,MAAM,EAAE;AACJQ,IAAAA,WAAW,EAAE,SADT;AAEJC,IAAAA,YAAY,EAAE;AACVnB,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,MAAM,EAAE;AAFE,KAFV;AAMJmB,IAAAA,aAAa,EAAE,IANX;AAOJC,IAAAA,YAAY,EAAE,GAPV;AAQJb,IAAAA,SAAS,EAAE;AARP,GADqB;AAW7BK,EAAAA,SAAS,EAAE;AACPS,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,QAAQ,EAAE;AAFH;AAXkB,CAAlB,CAAf;AAiBA,eAAenB,IAAf;AAEQ,CA2BU","sourcesContent":["import React from 'react'\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Game, GameList, SportSelector, Team, HomeScreen, ProfileScreen, RewardsScreen, BetslipScreen, FavoritesScreen } from '../components/Exports'\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst Tab = createBottomTabNavigator()\n\nconst CustomTabBarButton = ({children, onPress}) => (\n    <TouchableOpacity\n    style={{\n        top: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n    }}\n    onPress={onPress}>\n        <View style={{\n            width: 60,\n            height: 60,\n            borderRadius: 50,\n            backgroundColor: '#4cfa07'\n        }}>\n            {children}\n        </View>\n    </TouchableOpacity>\n)\n\nconst Tabs = () => {\n\n    return (\n        <Tab.Navigator\n            tabBarOptions={{\n                showLabel: false,\n                style: {\n                    position: 'absolute',\n                    // bottom: 25,\n                    // left: 10,\n                    // right: 10,\n                    elevation: 0,\n                    backgroundColor: '#161616',\n                    // borderRadius: 50,\n                    height: 90,\n                    ...styles.shadow\n                }\n            }}\n        >\n            <Tab.Screen name=\"Home\" component={HomeScreen} options={{\n                tabBarIcon: ({focused}) => (\n                     <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\n                        <Text>\n                            <Ionicons name='home' size={28} color='#fff' />\n                        </Text>\n                        <Text style={styles.whiteText}>\n                            Home\n                        </Text>\n                     </View>\n                )  \n            }}/>\n                        <Tab.Screen name=\"Favorites\" component={FavoritesScreen} options={{\n                tabBarIcon: ({focused}) => (\n                    <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\n                    <Text>\n                        <Ionicons name='star' size={28} color='#fff' />\n                    </Text>\n                    <Text style={styles.whiteText}>\n                        Favorites\n                    </Text>\n                    </View>\n                )\n            }}/>         \n            <Tab.Screen name=\"Betslip\" component={BetslipScreen} options={{\n                tabBarIcon: ({focused}) => (\n                    <Text>\n                        <Ionicons name='receipt' size={40} color='#161616' />\n                    </Text>\n    \n                ),\n                tabBarButton: (props) => (\n                    <CustomTabBarButton {...props} />\n                )   \n\n                // tabBarIcon: \n            }}/>\n\n                <Tab.Screen name=\"Rewards\" component={RewardsScreen} options={{\n                tabBarIcon: ({focused}) => (\n                    <View style={{alignItems :'center', justifyContent: 'center', top: 10}}>\n                    <Text>\n                        <Ionicons name='ribbon' size={28} color='#fff' />\n                    </Text>\n                    <Text style={styles.whiteText}>\n                        Rewards\n                    </Text>\n                    </View>\n                )   \n            }}/>\n\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} options={{\n                tabBarIcon: ({focused}) => (\n                    <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\n                        <Text>\n                            <Ionicons name='person-circle-sharp' size={28} color='#fff' />\n                        </Text>\n                        <Text style={styles.whiteText} >\n                            Profile\n                        </Text>\n                    </View>\n                )\n            }}/>\n\n        </Tab.Navigator>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    shadow: {\n        shadowColor: '#7f5df0',\n        shadowOffset: {\n            width: 0,\n            height: 10\n        },\n        shadowOpacity: 0.24,\n        shadowRadius: 3.6,\n        elevation: 5\n    },\n    whiteText: {\n        color: '#fff',\n        fontSize: 10\n    }\n})\n\nexport default Tabs\n\n        {/* //         screenOptions={({ route }) => ({\n        //         tabBarIcon: ({ focused, color, size }) => {\n        //         let iconName;\n\n        //         if (route.name === 'Home') {\n        //         iconName = focused\n        //             ? 'home' : 'home'\n        //         } else if (route.name === 'Profile') {\n        //         iconName = focused ? 'person-circle-sharp' : 'person-circle-sharp'\n        //         } else if (route.name === 'Rewards') {\n        //             iconName = focused ? 'ribbon' : 'ribbon'\n        //         } else if (route.name === 'Betslip') {\n        //             iconName = focused ? 'receipt' : 'receipt'\n        //         } else if (route.name === 'Favorites') {\n        //             iconName = focused ? 'star' : 'star'\n        //         }\n\n        //         return \n        //         },\n        //     })} \n        //     tabBarOptions={{\n        //         initialRouteName: \"Home\",\n        //         activeBackgroundColor: '#161616',\n        //         inactiveBackgroundColor: '#161616',\n        //         activeTintColor: '#1398A0',\n        //         inactiveTintColor: 'grey',\n        //         style: {height: 100},\n        // }}> */}"]},"metadata":{},"sourceType":"module"}