{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{Children,useState,useEffect}from'react';import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Button from\"react-native-web/dist/exports/Button\";import Alert from\"react-native-web/dist/exports/Alert\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{NavigationContainer}from'@react-navigation/native';import{Ionicons,FontAwesome5}from'@expo/vector-icons';import{element}from'prop-types';import GameList from\"../games/GameList\";import{HomeScreen}from\"../screens\";var SportSelector=function SportSelector(){var activeColor=\"#fff\";var inactiveColor=\"purple\";var _useState=useState(''),_useState2=_slicedToArray(_useState,2),selectedSport=_useState2[0],setSelectedSport=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),selectedLeague=_useState4[0],setSelectedLeague=_useState4[1];var _useState5=useState(!isActive),_useState6=_slicedToArray(_useState5,2),isActive=_useState6[0],setIsActive=_useState6[1];var _useState7=useState(activeColor),_useState8=_slicedToArray(_useState7,2),iconColor=_useState8[0],setIconColor=_useState8[1];var baseBallLeagues=[\"MLB\",\"MiLB\",\"National League\",\"American League\",\"NCAA\"];var footballLeagues=[\"NFL\",\"NFC\",\"AFC\",\"NCAA\"];var sportIcons=[React.createElement(TouchableOpacity,{onPress:function onPress(){return showLeagues(\"baseball\");},key:\"baseball\"},React.createElement(Ionicons,{style:styles.iconPadding,name:\"baseball-outline\",key:\"_baseball\",size:48,color:iconColor})),React.createElement(TouchableOpacity,{style:styles.iconPadding,onPress:function onPress(){return showLeagues(\"football\");},key:\"football\"},React.createElement(FontAwesome5,{style:styles.icon,name:\"football-ball\",key:\"_football\",size:38,color:iconColor})),React.createElement(TouchableOpacity,{style:styles.iconPadding,onPress:function onPress(){return showLeagues(\"soccer\");},key:\"soccer\"},React.createElement(Ionicons,{style:styles.icon,name:\"football-outline\",key:\"_soccer\",size:48,color:iconColor})),React.createElement(TouchableOpacity,{style:styles.iconPadding,onPress:function onPress(){return showLeagues(\"basketball\");},key:\"basketball\"},React.createElement(FontAwesome5,{style:styles.icon,name:\"basketball-ball\",key:\"_basketball\",size:38,color:iconColor})),React.createElement(TouchableOpacity,{style:styles.iconPadding,onPress:function onPress(){return showLeagues(\"golf\");},key:\"golf\"},React.createElement(FontAwesome5,{style:styles.icon,name:\"golf-ball\",key:\"_golf\",size:38,color:iconColor})),React.createElement(TouchableOpacity,{style:styles.iconPadding,onPress:function onPress(){return showLeagues(\"tennis\");},key:\"tennis\"},React.createElement(Ionicons,{style:styles.icon,name:\"tennisball-outline\",key:\"_tennis\",size:48,color:iconColor})),React.createElement(TouchableOpacity,{style:styles.iconPadding,onPress:function onPress(){return showLeagues(\"horse\");},key:\"horse\"},React.createElement(FontAwesome5,{style:styles.icon,name:\"horse-head\",key:\"_horse\",size:38,color:iconColor}))];var showLeagues=function showLeagues(props){setSelectedSport(props);switch(selectedSport){case\"baseball\":console.log(\"from switch\");break;}console.log(selectedSport);};var selectLeague=function selectLeague(props){setSelectedLeague(props);console.log(props);};var sayHello=function sayHello(){console.log(\"hello\");};var toggleActive=function toggleActive(){console.log(isActive);};return React.createElement(React.Fragment,null,React.createElement(View,null,React.createElement(ScrollView,{contentContainerStyle:styles.sportSelectContainer,horizontal:true},sportIcons),React.createElement(ScrollView,{contentContainerStyle:styles.leagueSelectContainer,horizontal:true},selectedSport==\"baseball\"&&baseBallLeagues.map(function(baseballLeague){return React.createElement(View,{style:styles.leagueSelectContainer,key:baseballLeague},React.createElement(TouchableOpacity,{onPress:function onPress(){return selectLeague(baseballLeague);}},React.createElement(Text,{style:styles.leagueNames},baseballLeague)));}),selectedSport==\"football\"&&footballLeagues.map(function(footballLeague){return React.createElement(View,null,React.createElement(TouchableOpacity,{onPress:function onPress(){return selectLeague(footballLeague);}},React.createElement(Text,{style:styles.leagueNames},footballLeague)));}),selectedSport==\"soccer\"&&soccerLeagues.map(function(soccerLeague){return React.createElement(View,null,React.createElement(TouchableOpacity,{onPress:function onPress(){return selectLeague(soccerLeague);}},React.createElement(Text,{style:styles.leagueNames},soccerLeague)));}),selectedSport==\"basketball\"&&basketballLeagues.map(function(basketballLeague){React.createElement(TouchableOpacity,{onPress:function onPress(){return selectLeague(basketballLeague);}},React.createElement(Text,{style:styles.leagueNames},basketballLeague));}),selectedSport==\"golf\"&&React.createElement(View,null),selectedSport==\"tennis\"&&React.createElement(View,null),selectedSport==\"horse\"&&React.createElement(View,null))),React.createElement(View,null,selectedLeague==\"MLB\"&&React.createElement(View,{style:styles.gameList},React.createElement(GameList,{selectedLeague:selectedLeague}))));};export default SportSelector;var styles=StyleSheet.create({sportSelectContainer:{flexGrow:1,backgroundColor:'#161616',justifyContent:'space-around',alignItems:'center',color:'#fff',paddingHorizontal:100,height:90},leagueSelectContainer:{flexGrow:1,backgroundColor:'#262626',justifyContent:'space-around',alignItems:'center',paddingHorizontal:10,color:'#fff',paddingTop:10},icon:{padding:0},leagueNames:{color:'#fff',height:40},iconPadding:{paddingLeft:10,paddingRight:10}});","map":{"version":3,"sources":["/Users/brandi/Downloads/sportsbook-app-demo/sportsbook-app/src/components/sports/SportSelector.jsx"],"names":["React","Children","useState","useEffect","NavigationContainer","Ionicons","FontAwesome5","element","GameList","HomeScreen","SportSelector","activeColor","inactiveColor","selectedSport","setSelectedSport","selectedLeague","setSelectedLeague","isActive","setIsActive","iconColor","setIconColor","baseBallLeagues","footballLeagues","sportIcons","showLeagues","styles","iconPadding","icon","props","console","log","selectLeague","sayHello","toggleActive","sportSelectContainer","leagueSelectContainer","map","baseballLeague","leagueNames","footballLeague","soccerLeagues","soccerLeague","basketballLeagues","basketballLeague","gameList","StyleSheet","create","flexGrow","backgroundColor","justifyContent","alignItems","color","paddingHorizontal","height","paddingTop","padding","paddingLeft","paddingRight"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,C,yrBAEA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,QAAT,CAAmBC,YAAnB,KAAuC,oBAAvC,CACA,OAASC,OAAT,KAAwB,YAAxB,CAEA,MAAOC,CAAAA,QAAP,yBACA,OAASC,UAAT,kBAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAExB,GAAMC,CAAAA,WAAW,CAAG,MAApB,CACA,GAAMC,CAAAA,aAAa,CAAG,QAAtB,CAEA,cAA0CV,QAAQ,CAAC,EAAD,CAAlD,wCAAOW,aAAP,eAAsBC,gBAAtB,eACA,eAA4CZ,QAAQ,CAAC,EAAD,CAApD,yCAAOa,cAAP,eAAuBC,iBAAvB,eACA,eAAgCd,QAAQ,CAAC,CAACe,QAAF,CAAxC,yCAAOA,QAAP,eAAiBC,WAAjB,eACA,eAAkChB,QAAQ,CAACS,WAAD,CAA1C,yCAAOQ,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,eAAe,CAAG,CACpB,KADoB,CACb,MADa,CACL,iBADK,CACc,iBADd,CACiC,MADjC,CAAxB,CAIA,GAAMC,CAAAA,eAAe,CAAG,CACpB,KADoB,CACb,KADa,CACN,KADM,CACC,MADD,CAAxB,CAIA,GAAMC,CAAAA,UAAU,CAAG,CAEP,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAAC,UAAD,CAAjB,EAA3B,CAA0D,GAAG,CAAE,UAA/D,EACE,oBAAC,QAAD,EAAU,KAAK,CAAEC,MAAM,CAACC,WAAxB,CAAqC,IAAI,CAAC,kBAA1C,CAA6D,GAAG,CAAE,WAAlE,CAA+E,IAAI,CAAE,EAArF,CAAyF,KAAK,CAAEP,SAAhG,EADF,CAFO,CAMP,oBAAC,gBAAD,EAAkB,KAAK,CAAEM,MAAM,CAACC,WAAhC,CAA6C,OAAO,CAAE,yBAAMF,CAAAA,WAAW,CAAC,UAAD,CAAjB,EAAtD,CAAqF,GAAG,CAAE,UAA1F,EACI,oBAAC,YAAD,EAAc,KAAK,CAAEC,MAAM,CAACE,IAA5B,CAAkC,IAAI,CAAC,eAAvC,CAAuD,GAAG,CAAE,WAA5D,CAAyE,IAAI,CAAE,EAA/E,CAAmF,KAAK,CAAER,SAA1F,EADJ,CANO,CAUP,oBAAC,gBAAD,EAAkB,KAAK,CAAEM,MAAM,CAACC,WAAhC,CAA6C,OAAO,CAAE,yBAAMF,CAAAA,WAAW,CAAC,QAAD,CAAjB,EAAtD,CAAmF,GAAG,CAAE,QAAxF,EACI,oBAAC,QAAD,EAAU,KAAK,CAAEC,MAAM,CAACE,IAAxB,CAA8B,IAAI,CAAC,kBAAnC,CAAsD,GAAG,CAAE,SAA3D,CAAsE,IAAI,CAAE,EAA5E,CAAgF,KAAK,CAAER,SAAvF,EADJ,CAVO,CAcP,oBAAC,gBAAD,EAAkB,KAAK,CAAEM,MAAM,CAACC,WAAhC,CAA6C,OAAO,CAAE,yBAAMF,CAAAA,WAAW,CAAC,YAAD,CAAjB,EAAtD,CAAuF,GAAG,CAAE,YAA5F,EACI,oBAAC,YAAD,EAAc,KAAK,CAAEC,MAAM,CAACE,IAA5B,CAAkC,IAAI,CAAC,iBAAvC,CAAyD,GAAG,CAAE,aAA9D,CAA6E,IAAI,CAAE,EAAnF,CAAuF,KAAK,CAAER,SAA9F,EADJ,CAdO,CAkBP,oBAAC,gBAAD,EAAkB,KAAK,CAAEM,MAAM,CAACC,WAAhC,CAA6C,OAAO,CAAE,yBAAMF,CAAAA,WAAW,CAAC,MAAD,CAAjB,EAAtD,CAAiF,GAAG,CAAE,MAAtF,EACI,oBAAC,YAAD,EAAc,KAAK,CAAEC,MAAM,CAACE,IAA5B,CAAkC,IAAI,CAAC,WAAvC,CAAmD,GAAG,CAAE,OAAxD,CAAiE,IAAI,CAAE,EAAvE,CAA2E,KAAK,CAAER,SAAlF,EADJ,CAlBO,CAsBP,oBAAC,gBAAD,EAAkB,KAAK,CAAEM,MAAM,CAACC,WAAhC,CAA6C,OAAO,CAAE,yBAAMF,CAAAA,WAAW,CAAC,QAAD,CAAjB,EAAtD,CAAmF,GAAG,CAAE,QAAxF,EACI,oBAAC,QAAD,EAAU,KAAK,CAAEC,MAAM,CAACE,IAAxB,CAA8B,IAAI,CAAC,oBAAnC,CAAwD,GAAG,CAAE,SAA7D,CAAwE,IAAI,CAAE,EAA9E,CAAkF,KAAK,CAAER,SAAzF,EADJ,CAtBO,CA0BP,oBAAC,gBAAD,EAAkB,KAAK,CAAEM,MAAM,CAACC,WAAhC,CAA6C,OAAO,CAAE,yBAAMF,CAAAA,WAAW,CAAC,OAAD,CAAjB,EAAtD,CAAkF,GAAG,CAAE,OAAvF,EACI,oBAAC,YAAD,EAAc,KAAK,CAAEC,MAAM,CAACE,IAA5B,CAAkC,IAAI,CAAC,YAAvC,CAAoD,GAAG,CAAE,QAAzD,CAAmE,IAAI,CAAE,EAAzE,CAA6E,KAAK,CAAER,SAApF,EADJ,CA1BO,CAAnB,CA+BA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACI,KAAD,CAAW,CAC3Bd,gBAAgB,CAACc,KAAD,CAAhB,CAEA,OAAQf,aAAR,EACI,IAAK,UAAL,CACIgB,OAAO,CAACC,GAAR,CAAY,aAAZ,EACA,MAHR,CAOAD,OAAO,CAACC,GAAR,CAAYjB,aAAZ,EACH,CAXD,CAaA,GAAMkB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAAW,CAC5BZ,iBAAiB,CAACY,KAAD,CAAjB,CACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAEH,CAJD,CAMA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnBH,OAAO,CAACC,GAAR,CAAY,OAAZ,EACH,CAFD,CAIA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAEvBJ,OAAO,CAACC,GAAR,CAAYb,QAAZ,EACH,CAHD,CA0CA,MACI,yCACA,oBAAC,IAAD,MACI,oBAAC,UAAD,EAAY,qBAAqB,CAAEQ,MAAM,CAACS,oBAA1C,CAAgE,UAAU,CAAE,IAA5E,EAEMX,UAFN,CADJ,CAMI,oBAAC,UAAD,EAAY,qBAAqB,CAAEE,MAAM,CAACU,qBAA1C,CAAiE,UAAU,CAAE,IAA7E,EACKtB,aAAa,EAAI,UAAjB,EACGQ,eAAe,CAACe,GAAhB,CAAoB,SAACC,cAAD,CAAoB,CACpC,MACI,qBAAC,IAAD,EAAM,KAAK,CAAEZ,MAAM,CAACU,qBAApB,CAA2C,GAAG,CAAEE,cAAhD,EACI,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAMN,CAAAA,YAAY,CAACM,cAAD,CAAlB,EAA3B,EAA+D,oBAAC,IAAD,EAAM,KAAK,CAAEZ,MAAM,CAACa,WAApB,EAAkCD,cAAlC,CAA/D,CADJ,CADJ,CAKH,CAND,CAFR,CAUKxB,aAAa,EAAI,UAAjB,EACGS,eAAe,CAACc,GAAhB,CAAoB,SAACG,cAAD,CAAoB,CACpC,MACI,qBAAC,IAAD,MACA,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAMR,CAAAA,YAAY,CAACQ,cAAD,CAAlB,EAA3B,EAA+D,oBAAC,IAAD,EAAM,KAAK,CAAEd,MAAM,CAACa,WAApB,EAAkCC,cAAlC,CAA/D,CADA,CADJ,CAKH,CAND,CAXR,CAmBK1B,aAAa,EAAI,QAAjB,EACG2B,aAAa,CAACJ,GAAd,CAAkB,SAACK,YAAD,CAAkB,CAChC,MACI,qBAAC,IAAD,MACA,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAMV,CAAAA,YAAY,CAACU,YAAD,CAAlB,EAA3B,EAA6D,oBAAC,IAAD,EAAM,KAAK,CAAEhB,MAAM,CAACa,WAApB,EAAkCG,YAAlC,CAA7D,CADA,CADJ,CAKH,CAND,CApBR,CA4BK5B,aAAa,EAAI,YAAjB,EACG6B,iBAAiB,CAACN,GAAlB,CAAsB,SAACO,gBAAD,CAAsB,CAEpC,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAMZ,CAAAA,YAAY,CAACY,gBAAD,CAAlB,EAA3B,EAAiE,oBAAC,IAAD,EAAM,KAAK,CAAElB,MAAM,CAACa,WAApB,EAAkCK,gBAAlC,CAAjE,EACP,CAHD,CA7BR,CAmCK9B,aAAa,EAAI,MAAjB,EAGG,oBAAC,IAAD,MAtCR,CA2CKA,aAAa,EAAI,QAAjB,EAEG,oBAAC,IAAD,MA7CR,CAgDKA,aAAa,EAAI,OAAjB,EACG,oBAAC,IAAD,MAjDR,CANJ,CADA,CA8DA,oBAAC,IAAD,MACKE,cAAc,EAAI,KAAlB,EACD,oBAAC,IAAD,EAAM,KAAK,CAAEU,MAAM,CAACmB,QAApB,EACI,oBAAC,QAAD,EAAU,cAAc,CAAE7B,cAA1B,EADJ,CAFJ,CA9DA,CADJ,CAyEH,CA3LD,CA6LA,cAAeL,CAAAA,aAAf,CAEA,GAAMe,CAAAA,MAAM,CAAGoB,UAAU,CAACC,MAAX,CAAkB,CAC7BZ,oBAAoB,CAAE,CAClBa,QAAQ,CAAE,CADQ,CAElBC,eAAe,CAAE,SAFC,CAGlBC,cAAc,CAAE,cAHE,CAIlBC,UAAU,CAAE,QAJM,CAKlBC,KAAK,CAAE,MALW,CAMlBC,iBAAiB,CAAE,GAND,CAOlBC,MAAM,CAAE,EAPU,CADO,CAU7BlB,qBAAqB,CAAE,CACnBY,QAAQ,CAAE,CADS,CAEnBC,eAAe,CAAE,SAFE,CAGnBC,cAAc,CAAE,cAHG,CAInBC,UAAU,CAAE,QAJO,CAKnBE,iBAAiB,CAAE,EALA,CAMnBD,KAAK,CAAE,MANY,CAOnBG,UAAU,CAAE,EAPO,CAVM,CAmB7B3B,IAAI,CAAE,CACF4B,OAAO,CAAE,CADP,CAnBuB,CAsB7BjB,WAAW,CAAE,CACTa,KAAK,CAAE,MADE,CAETE,MAAM,CAAE,EAFC,CAtBgB,CA0B7B3B,WAAW,CAAE,CACT8B,WAAW,CAAE,EADJ,CAETC,YAAY,CAAE,EAFL,CA1BgB,CAAlB,CAAf","sourcesContent":["import React, { Children, useState, useEffect } from 'react'\nimport { SafeAreaView, View, Text, TextInput, Button, Alert, StyleSheet, ActivityIndicator, ScrollView, FlatList, TouchableOpacity } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { Ionicons, FontAwesome5 } from '@expo/vector-icons'\nimport { element } from 'prop-types'\n\nimport GameList from '../games/GameList'\nimport { HomeScreen } from '../screens'\n\nconst SportSelector = () => {\n\n    const activeColor = \"#fff\"\n    const inactiveColor = \"purple\"\n\n    const [selectedSport, setSelectedSport] = useState('')\n    const [selectedLeague, setSelectedLeague] = useState('')\n    const [isActive, setIsActive] = useState(!isActive)\n    const [iconColor, setIconColor] = useState(activeColor)\n\n    const baseBallLeagues = [\n        \"MLB\", \"MiLB\", \"National League\", \"American League\", \"NCAA\"\n    ]\n\n    const footballLeagues = [\n        \"NFL\", \"NFC\", \"AFC\", \"NCAA\"\n    ]\n\n    const sportIcons = [\n    \n                <TouchableOpacity onPress={() => showLeagues(\"baseball\")} key={\"baseball\"}>\n                  <Ionicons style={styles.iconPadding} name=\"baseball-outline\" key={\"_baseball\"} size={48} color={iconColor} />            \n                 </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"football\")} key={\"football\"}>\n                    <FontAwesome5 style={styles.icon} name=\"football-ball\" key={\"_football\"} size={38} color={iconColor} />            \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"soccer\")} key={\"soccer\"}>\n                    <Ionicons style={styles.icon} name=\"football-outline\" key={\"_soccer\"} size={48} color={iconColor} />           \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"basketball\")} key={\"basketball\"}>\n                    <FontAwesome5 style={styles.icon} name=\"basketball-ball\" key={\"_basketball\"} size={38} color={iconColor} />    \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"golf\")} key={\"golf\"}>\n                    <FontAwesome5 style={styles.icon} name=\"golf-ball\" key={\"_golf\"} size={38} color={iconColor} />           \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"tennis\")} key={\"tennis\"}>\n                    <Ionicons style={styles.icon} name=\"tennisball-outline\" key={\"_tennis\"} size={48} color={iconColor} />               \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"horse\")} key={\"horse\"}>\n                    <FontAwesome5 style={styles.icon} name=\"horse-head\" key={\"_horse\"} size={38} color={iconColor} />           \n                </TouchableOpacity>,\n    ]\n\n    const showLeagues = (props) => {\n        setSelectedSport(props)\n\n        switch (selectedSport) {\n            case \"baseball\":\n                console.log(\"from switch\")\n                break\n        }\n\n\n        console.log(selectedSport)\n    }\n\n    const selectLeague = (props) => {\n        setSelectedLeague(props)\n        console.log(props)\n\n    }\n\n    const sayHello = () => {\n        console.log(\"hello\")\n    }\n\n    const toggleActive = () => {\n        // this.childData.setIsActive( {isActive: !isActive })\n        console.log(isActive)\n    }\n\n    // const [schedules, setSchedules] = useState([\n    //     // schedules: []\n    // ])\n\n    // useEffect(() => {\n    //     getSchedules()\n    // }, [])\n\n    // const getSchedules = async () => {\n    //     await axios.get('https://fly.sportsdata.io/v3/mlb/scores/json/Games/2021?key=df194af6ada54af983b9667771d8aa72')\n    //     .then(res => {\n\n    //         res.data\n\n    //         const scheduleData = res.data\n    //         setSchedules(scheduleData)\n    //         console.log(schedules)\n    //     })\n    //     .catch(err => console.log(\"Error getting schedules: \", err))\n    // }\n\n    // function handleIconColorChange(props) {\n\n    //     if (props == selectedSport) {\n    //         setActive(props)\n    //         console.log(\"Props!\", props)\n    //     }\n    //     console.log(props)\n    //     // setIconColor('#fff') ? setIconColor('purple') : \n\n    // }\n\n    // onpress turns the icon white: activeColor, inactiveColor\n    // if the icon is white, no other elements in the array can have a white icon\n    // search the elements in the array to see if their icon is white\n    // if it's white, turn it back to grey\n\n    return (\n        <>\n        <View>\n            <ScrollView contentContainerStyle={styles.sportSelectContainer} horizontal={true}>\n                \n                 {sportIcons}\n                \n            </ScrollView>\n            <ScrollView contentContainerStyle={styles.leagueSelectContainer} horizontal={true}>\n                {selectedSport == \"baseball\" &&\n                    baseBallLeagues.map((baseballLeague) => {\n                        return(\n                            <View style={styles.leagueSelectContainer} key={baseballLeague}>\n                                <TouchableOpacity onPress={() => selectLeague(baseballLeague)}><Text style={styles.leagueNames}>{baseballLeague}</Text></TouchableOpacity>\n                           </View>\n                        )\n                    })\n                }\n                {selectedSport == \"football\" &&\n                    footballLeagues.map((footballLeague) => {\n                        return (\n                            <View>\n                            <TouchableOpacity onPress={() => selectLeague(footballLeague)}><Text style={styles.leagueNames}>{footballLeague}</Text></TouchableOpacity>\n                        </View>\n                        )\n                    })\n                }\n                {selectedSport == \"soccer\" &&\n                    soccerLeagues.map((soccerLeague) => {\n                        return (\n                            <View>\n                            <TouchableOpacity onPress={() => selectLeague(soccerLeague)}><Text style={styles.leagueNames}>{soccerLeague}</Text></TouchableOpacity>\n                        </View>\n                        )\n                    })\n                }\n                {selectedSport == \"basketball\" &&\n                    basketballLeagues.map((basketballLeague) => {\n                            \n                            <TouchableOpacity onPress={() => selectLeague(basketballLeague)}><Text style={styles.leagueNames}>{basketballLeague}</Text></TouchableOpacity>\n                    })\n                    \n                }\n                {selectedSport == \"golf\" &&\n\n\n                    <View></View>\n\n                    \n\n                }\n                {selectedSport == \"tennis\" &&\n\n                    <View></View>\n\n                }\n                {selectedSport == \"horse\" &&\n                    <View></View>\n\n                }\n                \n            </ScrollView>\n        </View>\n        <View>\n            {selectedLeague == \"MLB\" &&\n            <View style={styles.gameList}>\n                <GameList selectedLeague={selectedLeague}/>\n            </View>\n            }\n\n        </View>\n        </>\n    )\n}\n\nexport default SportSelector\n\nconst styles = StyleSheet.create({\n    sportSelectContainer: {\n        flexGrow: 1,\n        backgroundColor: '#161616',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        color: '#fff',\n        paddingHorizontal: 100,\n        height: 90\n    },\n    leagueSelectContainer: {\n        flexGrow: 1,\n        backgroundColor: '#262626',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        paddingHorizontal: 10,\n        color: '#fff',\n        paddingTop: 10\n    },\n    icon: {\n        padding: 0, \n    },\n    leagueNames: {\n        color: '#fff',\n        height: 40,\n    },\n    iconPadding: {\n        paddingLeft: 10,\n        paddingRight: 10\n    },\n\n\n})\n\n"]},"metadata":{},"sourceType":"module"}