{"version":3,"sources":["src/assets/baseball-stadium.jpg","src/assets/logo.png","src/components/bets/betsSlice.js","src/store.js","src/components/sports/Baseball.jsx","src/components/bets/Bet.jsx","src/components/bets/PendingBetslip.jsx","src/components/games/GameList.jsx","src/components/screens/HomeScreen.jsx","src/components/screens/ProfileScreen.jsx","src/components/screens/FavoritesScreen.jsx","src/components/screens/RewardsScreen.jsx","src/components/screens/BetslipScreen.jsx","src/components/sports/SportSelector.jsx","src/components/Header.jsx","src/navigation/Tabs.jsx","src/Main.jsx","App.js","src/assets/team-logos/ARI.png","src/assets/team-logos/ATL.png","src/assets/team-logos/BAL.png","src/assets/team-logos/BOS.png","src/assets/team-logos/CHC.png","src/assets/team-logos/CHW.png","src/assets/team-logos/CIN.png","src/assets/team-logos/CLE.png","src/assets/team-logos/COL.png","src/assets/team-logos/DET.png","src/assets/team-logos/HOU.png","src/assets/team-logos/KC.png","src/assets/team-logos/LAA.png","src/assets/team-logos/LAD.png","src/assets/team-logos/MIA.png","src/assets/team-logos/MIL.png","src/assets/team-logos/MIN.png","src/assets/team-logos/NYM.png","src/assets/team-logos/NYY.png","src/assets/team-logos/OAK.png","src/assets/team-logos/PHI.png","src/assets/team-logos/PIT.png","src/assets/team-logos/SD.png","src/assets/team-logos/SEA.png","src/assets/team-logos/SF.png","src/assets/team-logos/STL.png","src/assets/team-logos/TB.png","src/assets/team-logos/TEX.png","src/assets/team-logos/TOR.png","src/assets/team-logos/WSH.png","src/assets/ad-1.jpg"],"names":["module","exports","betsSlice","createSlice","name","initialState","reducers","pendingBetAdded","state","action","push","payload","pendingBetRemoved","filter","element","betID","betStatusChanged","bet","find","betPending","actions","configureStore","reducer","bets","betsSliceReducer","StyleSheet","create","blackText","color","Bet","props","console","log","gameID","awayTeamName","homeTeamName","betType","homeMoneyLine","awayMoneyLine","PendingBetslip","pendingBets","useSelector","dispatch","useDispatch","useState","wager","setWager","currentCalculatedBet","id","thisCalculatedBet","calculateBet","y","Math","abs","parseInt","handleTapPlaceBet","focusedBet","calculateThisBet","num","thisID","thisBet","theseOdds","focusedBetWager","round","renderedPendingBets","map","View","style","styles","betContainer","key","betHeader","Text","fontSize","TextInput","input","keyboardType","onChangeText","quickBets","TouchableOpacity","quickBet","onPress","calculatedBet","placeBet","backgroundColor","marginBottom","alignContent","padding","borderRadius","flexDirection","justifyContent","alignItems","height","width","margin","borderWidth","borderColor","textAlign","paddingVertical","GameList","scheduleData","setScheduleData","selectedLeague","isLoading","setIsLoading","showModal","setShowModal","useEffect","getSchedules","a","async","axios","get","then","res","data","catch","err","formatDate","date","Date","parse","toString","imageSelect","teamName","require","formatTeamName","getNanoID","nanoid","createMoneyLine","GameId","AwayTeamName","HomeTeamName","AlternateMarketPregameOdds","HomeMoneyLine","AwayMoneyLine","newBet","hideModal","backdropOpacity","backdropTransitionInTiming","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","isVisible","onBackdropPress","onRequestClose","Alert","alert","ScrollView","contentContainerStyle","modalScrollView","Button","title","gameList","scheduleObj","gameListItem","gameListItemRow","tealText","DateTime","lightText","Name","teamInfo","Image","gameListTeamLogo","source","betInfo","betBox","AwayPointSpread","AwayPointSpreadPayout","HomePointSpread","HomePointSpreadPayout","reverse","container","flex","flexGrow","paddingBottom","borderBottomColor","borderBottomWidth","flexWrap","zIndex","HomeScreen","news","setNews","getNews","getDate","today","dd","String","padStart","mm","getMonth","yyyy","getFullYear","Stadium","alignSelf","article","NewsID","marginVertical","Title","numberOfLines","Content","ProfileScreen","imageContainer","whiteText","viewStyle","FavoritesScreen","RewardsScreen","BetslipScreen","renderedView","decideBetSlipContent","SportSelector","selectedSport","setSelectedSport","setSelectedLeague","isActive","iconColor","sportIcons","showLeagues","Ionicons","iconPadding","size","FontAwesome5","icon","selectLeague","sportSelectContainer","horizontal","leagueSelectContainer","baseballLeague","leagueNames","footballLeague","soccerLeagues","soccerLeague","basketballLeagues","basketballLeague","paddingHorizontal","paddingTop","paddingLeft","paddingRight","Header","LinearGradient","colors","start","end","headerContainer","AntDesign","Logo","Tab","createBottomTabNavigator","CustomTabBarButton","children","top","shadow","Tabs","Navigator","tabBarOptions","showLabel","position","Screen","component","options","tabBarIcon","focused","tabBarButton","Main","store","NavigationContainer","darkGreyBackground","Component","redText","App"],"mappings":"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","file":"static/js/app.ad2c67a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseball-stadium.95c9a7c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7908f1cd.png\";","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst initialState = []\n\nconst betsSlice = createSlice({\n    name: 'bets',\n    initialState,\n    reducers: {\n        pendingBetAdded(state, action) {\n            state.push(action.payload)\n        },\n        pendingBetRemoved(state, action) {\n            return state.filter(element => element.betID !== action.payload.betID)\n        },\n        betStatusChanged(state, action) {\n\n            let bet = state.find(element => element.betID === action.payload.betID)\n\n            bet.betPending = !bet.betPending\n        }\n\n    }\n})\n\nexport const { pendingBetAdded, pendingBetRemoved, betStatusChanged } = betsSlice.actions\n\nexport default betsSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\nimport betsSliceReducer from './components/bets/betsSlice'\n\nexport default configureStore({\n    reducer: {\n        bets: betsSliceReducer\n    }\n})","import React from 'react'\nimport { SafeAreaView, View, Text, TextInput, Button, Alert, StyleSheet, ActivityIndicator } from 'react-native'\n\n\nconst Baseball = props => {\n\n    return (\n        <>\n        <Text style={styles.blackText}>Yo</Text>\n        </>\n    )   \n}\n\nexport default Baseball\n\nconst styles = StyleSheet.create({\n    blackText: {\n        color: '#000'\n    }\n})","import React from 'react'\n\nconst Bet = (props) => {\n\n    console.log(\"BET PROPS: \", props)\n    let gameID = props.gameID\n    let betID = props.betID\n    let awayTeamName = props.awayTeamName\n    let homeTeamName = props.homeTeamName\n    let betType = props.betType\n    let homeMoneyLine = props.homeMoneyLine\n    let awayMoneyLine = props.awayMoneyLine\n    let betPending = props.betPending\n    // let homePointSpread = props.homePointSpread\n    // let awayPointSpread = props.awayPointSpread\n    // let homePointSpreadPayout = props.homePointSpreadPayout\n    // let awayPointSpreadPayout = props.awayPointSpreadPayout\n    // let overUnder = props.overUnder\n    // let overPayout = props.overPayout\n    // let underPayout = props.underPayout\n    // let wager = props.wager\n    // let potentialWinnings = props.potentialWinnings\n    // let potentialPayout = props.potentialPayout\n\n    return { \n        gameID,\n        awayTeamName,\n        homeTeamName,\n        betID,\n        // awayTeamName: awayTeamName,\n        // homeTeamName: homeTeamName,\n        betType,\n        homeMoneyLine,\n        awayMoneyLine,\n        betPending\n        // homeMoneyLine: homeMoneyLine,\n        // awayMoneyLine: awayMoneyLine,\n        // homePointSpread: homePointSpread,\n        // awayPointSpread: awayPointSpread,\n        // homePointSpreadPayout: homePointSpreadPayout,\n        // awayPointSpreadPayout: awayPointSpreadPayout,\n        // overUnder: overUnder,\n        // overPayout: overPayout,\n        // underPayout: underPayout,\n        // wager: wager,\n        // potentialWinnings: potentialWinnings,\n        // potentialPayout: potentialPayout\n     }\n    \n}\n\nexport default Bet","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport { Button, Image, StyleSheet, ScrollView, TouchableOpacity, Text, TextInput, View } from 'react-native'\nimport { pendingBetRemoved, betStatusChanged } from './betsSlice'\n\nconst PendingBetslip = (props) => {\n    const pendingBets = useSelector(state => state.bets)\n    const dispatch = useDispatch()\n\n    const [wager, setWager] = useState(0)\n    // const [currentCalculatedBet, setCurrentCalculatedBet] = useState({})\n    // const [thisCalculatedBet, setThisCalculatedBet] = useState(0)\n\n    let currentCalculatedBet = {\n        id: '',\n        thisCalculatedBet: 0\n    }\n\n    calculateBet = (props) => {\n        console.log(\"Props from calculatbet: \", props)\n        let betID = props.betID\n\n        let a\n        let y = props.wager\n        console.log(y)\n\n        if (props.awayMoneyLine < 100) {\n            a = (y * Math.abs(100/props.awayMoneyLine)) + parseInt(y)\n        } else {\n            a = (y * Math.abs(props.awayMoneyLine/100)) + parseInt(y)\n        }\n        \n        // console.log(\"a \", a)\n        // console.log(\"props from calculate bet\", props)\n        // console.log(\"Bet: \", y, \"Profit: \", parseInt(a) - parseInt(y), \"Payout: \", a)\n        // console.log(\"Bet was calculated!: \", a)\n        // console.log(\"wager: \", wager)\n\n        handleTapPlaceBet(betID)\n\n    }\n\n    handleTapPlaceBet = (props) => {\n        console.log(\"HANDLE PROPS: \", props)\n        let focusedBet = pendingBets.find(element => element.betID == props)\n        \n        dispatch(pendingBetRemoved(focusedBet))\n        // dispatch(betStatusChanged(focusedBet))\n        console.log(\"FOCUSED BET: \", focusedBet)\n    }\n\n    calculateThisBet = (props, num) => {\n        // setCurrentCalculatedBet({...currentCalculatedBet, id: '', calculateBet: 0})\n        // setThisCalculatedBet(0)\n        console.log(\"this calculated from function start: \", thisCalculatedBet)\n        console.log(props, num)\n\n        let thisCalculatedBet = 0\n\n        let thisID = props\n        console.log(\"thisID\", thisID)\n\n        let focusedBet = pendingBets.find(thisBet => thisID)\n        console.log(\"focusedBet\", focusedBet)\n\n        let theseOdds = focusedBet.awayMoneyLine\n        console.log(\"theseOdds: \", theseOdds)\n        \n        let focusedBetWager = focusedBet.wager\n        console.log(\"Focused Bet Wager: \", focusedBetWager + num)\n\n        let y = num\n        console.log(\"y: \", y)\n\n        if (theseOdds > 100) {\n            thisCalculatedBet = (y * Math.abs(theseOdds/100)) + parseInt(y)\n        } else {\n            thisCalculatedBet = (y * Math.abs(100/theseOdds)) + parseInt(y)\n        }\n        \n\n        console.log(\"Bet: \", y, \"Profit: \", Math.round(parseInt(thisCalculatedBet) - parseInt(y)), \"Payout: \", thisCalculatedBet)\n\n        console.log(\"This Bet Calculated: \", thisCalculatedBet)\n\n        // setCurrentCalculatedBet({...currentCalculatedBet, id: thisID, calculatedBet: thisCalculatedBet})\n        // console.log(\"Current Calculated Bet: \", currentCalculatedBet)\n\n        handleTapPlaceBet()\n    }\n \n    const renderedPendingBets = pendingBets.map(bet => (\n\n        <View style={styles.betContainer} key={bet.betID}>\n            {/* <Text style={{color: '#fff'}}>{bet.betID}</Text> */}\n            <View style={styles.betHeader}>\n            <Text style={{color: '#fff', fontSize: 18}}>{bet.awayTeamName} vs {bet.homeTeamName}</Text>\n            <Text style={{color: '#fff', fontSize: 18}}>{bet.awayMoneyLine}</Text>\n            </View>\n            <Text style={{color: '#fff'}}>{wager}</Text>\n            <TextInput style={styles.input} keyboardType=\"numeric\" onChangeText={setWager}></TextInput>\n            <View style={styles.quickBets}>\n                <TouchableOpacity style={styles.quickBet}><Text>CLR</Text></TouchableOpacity>\n                <TouchableOpacity style={styles.quickBet} onPress={() => {calculateThisBet(bet.betID, 5)}}><Text>$5</Text></TouchableOpacity>\n                <TouchableOpacity style={styles.quickBet} onPress={() => {calculateThisBet(bet.betID, 10)}}><Text>$10</Text></TouchableOpacity>\n                <TouchableOpacity style={styles.quickBet} onPress={() => {calculateThisBet(bet.betID, 20)}}><Text>$20</Text></TouchableOpacity>\n                <TouchableOpacity style={styles.quickBet} onPress={() => {calculateThisBet(bet.betID, 100)}}><Text>$50</Text></TouchableOpacity>\n            </View>\n            {currentCalculatedBet.id == bet.betID &&\n            <Text style={{color: '#fff'}}>\n            {currentCalculatedBet.calculatedBet}\n            </Text>\n            }   \n            <TouchableOpacity style={styles.placeBet} onPress={() => calculateBet(bet)}><Text>Place Bet</Text></TouchableOpacity>\n            \n        </View>\n \n    ))\n\n    return (\n\n        <View>\n            {renderedPendingBets}\n        </View>\n\n    )\n}\n\nexport default PendingBetslip\n\nconst styles=StyleSheet.create({\n    betContainer: {\n        backgroundColor: '#222',\n        marginBottom: 20,\n        alignContent: 'space-between',\n        padding: 18,\n        borderRadius: 12\n    },\n    betHeader: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'flex-start'\n    },\n    input: {\n        height: 40,\n        width: 120,\n        margin: 12,\n        padding: 10,\n        borderWidth: 1,\n        borderRadius: 30,\n        borderColor: 'hotpink',\n        backgroundColor: '#333',\n        color: '#fff'\n      },\n      quickBets: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        marginBottom: 18\n      },\n      quickBet: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#37bcc2',\n        color: '#fff',\n        width: 50,\n        height: 50,\n        borderRadius: 4,\n        textAlign: 'center'\n      },\n      placeBet: {\n          backgroundColor: 'hotpink',\n          justifyContent: 'space-around',\n          paddingVertical: 8\n      }\n})","import React, { useEffect, setState, useState, useInterval, Component } from 'react'\nimport axios from 'axios'\nimport { Button, Image, StyleSheet, ScrollView, TouchableOpacity, Text, TextInput, View } from 'react-native'\nimport Modal from \"react-native-modal\";\n\nimport Bet from '../bets/Bet'\nimport { nanoid } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\n\nimport { pendingBetAdded } from '../bets/betsSlice' \nimport PendingBetslip from '../bets/PendingBetslip'\nimport { render } from 'react-dom'\n\nconst GameList = (props) => {\n\n    const dispatch = useDispatch()\n\n    const [scheduleData, setScheduleData] = useState([])\n    const [homeTeams, setHomeTeams] = useState([])\n    const [selectedLeague, setSelectedLeage] = useState(props.selectedLeague)\n    const [isLoading, setIsLoading] = useState(true)\n\n    const [showModal, setShowModal] = useState(false)\n\n    useEffect(() => {\n        getSchedules()\n      }, [])\n\n      const toggleModal = () => {\n        setShowModal(!showModal)\n      }\n\n   getSchedules = async () => {\n        await axios.get('https://fly.sportsdata.io/v3/mlb/odds/json/AlternateMarketGameOddsByDate/2021-07-05?key=df194af6ada54af983b9667771d8aa72')\n        .then(res => {\n\n            res.data\n\n            setScheduleData(res.data)\n            setIsLoading(false)\n            console.log(scheduleData)\n        })\n        .catch(err => console.log(\"Error getting schedules: \", err))\n    }\n\n    formatDate = (date) => {\n        let formattedDate = new Date(Date.parse(date)).toString()\n        return formattedDate\n    }\n\n    imageSelect = (teamName) => {\n        \n        switch (teamName) {\n            case 'ARI':\n                return require('../../assets/team-logos/ARI.png') \n            case \"ATL\":\n                return require('../../assets/team-logos/ATL.png') \n            case \"BAL\":\n                return require('../../assets/team-logos/BAL.png') \n            case \"BOS\":\n                return require('../../assets/team-logos/BOS.png') \n            case \"CHC\":\n                return require('../../assets/team-logos/CHC.png') \n            case \"CHW\":\n             return require('../../assets/team-logos/CHW.png') \n            case \"CIN\":\n                return require('../../assets/team-logos/CIN.png') \n            case \"CLE\":\n                return require('../../assets/team-logos/CLE.png') \n            case \"COL\":\n                return require('../../assets/team-logos/COL.png') \n            case \"DET\":\n                return require('../../assets/team-logos/DET.png') \n            case \"HOU\":\n                return require('../../assets/team-logos/HOU.png') \n            case \"KC\":\n                return require('../../assets/team-logos/KC.png') \n            case \"LAA\":\n                return require('../../assets/team-logos/LAA.png') \n            case \"LAD\":\n                return require('../../assets/team-logos/LAD.png') \n            case \"MIA\":\n                return require('../../assets/team-logos/MIA.png') \n            case \"MIL\":\n                return require('../../assets/team-logos/MIL.png') \n            case \"MIN\":\n                return require('../../assets/team-logos/MIN.png') \n            case \"NYM\":\n                return require('../../assets/team-logos/NYM.png') \n            case \"NYY\":\n                return require('../../assets/team-logos/NYY.png') \n            case \"OAK\":\n                return require('../../assets/team-logos/OAK.png') \n            case \"PHI\":\n                return require('../../assets/team-logos/PHI.png') \n            case \"PIT\":\n                return require('../../assets/team-logos/PIT.png') \n            case \"SD\":\n                return require('../../assets/team-logos/SD.png') \n            case \"SEA\":\n                return require('../../assets/team-logos/SEA.png') \n            case \"SF\":\n                return require('../../assets/team-logos/SF.png') \n            case \"STL\":\n                return require('../../assets/team-logos/STL.png') \n            case \"TB\":\n                return require('../../assets/team-logos/TB.png') \n            case \"TEX\":\n                return require('../../assets/team-logos/TEX.png') \n            case \"TOR\":\n                return require('../../assets/team-logos/TOR.png') \n            case \"WSH\":\n                return require('../../assets/team-logos/WSH.png') \n            default:\n                break\n\n        }\n\n        console.log(teamName)\n    } \n\n    formatTeamName = (teamName) => {\n\n        switch (teamName) {\n            case 'ARI':\n                return 'Arizona Diamondbacks' \n            case \"ATL\":\n                return 'Atlanta Braves'\n            case \"BAL\":\n                return 'Baltimore Orioles' \n            case \"BOS\":\n                return 'Boston Red Sox'\n            case \"CHC\":\n                return 'Chicago Cubs'\n            case \"CHW\":\n                return 'Chicago White Sox' \n            case \"CIN\":\n                return 'Cincinnati Reds' \n            case \"CLE\":\n                return 'Cleveland Indians' \n            case \"COL\":\n                return 'Colorado Rockies' \n            case \"DET\":\n                return 'Detroit Tigers' \n            case \"HOU\":\n                return 'Houston Astros' \n            case \"KC\":\n                return 'Kansas City Royals' \n            case \"LAA\":\n                return 'Los Angeles Angels' \n            case \"LAD\":\n                return 'LA Dodgers' \n            case \"MIA\":\n                return 'Miami Marlins' \n            case \"MIL\":\n                return 'Milwalkee Brewers' \n            case \"MIN\":\n                return 'Minnesota Twins' \n            case \"NYM\":\n                return 'New York Mets' \n            case \"NYY\":\n                return 'New York Yankees' \n            case \"OAK\":\n                return 'Oakland Athletics' \n            case \"PHI\":\n                return 'Philadelphia Phillies' \n            case \"PIT\":\n                return 'Pittsburg Pirates' \n            case \"SD\":\n                return 'San Diego Padres' \n            case \"SEA\":\n                return 'Seattle Mariners' \n            case \"SF\":\n                return 'San Francisco Giants' \n            case \"STL\":\n                return 'St. Louis Cardinals'\n            case \"TB\":\n                return 'Tampa Bay Rays' \n            case \"TEX\":\n                return 'Texas Rangers' \n            case \"TOR\":\n                return 'Toronto Blue Jays' \n            case \"WSH\":\n                return 'Washington Nationals' \n            default:\n                break\n\n        }\n    }\n\n    getNanoID = () => {\n        return nanoid(6)\n    }\n\n    createMoneyLine = (props) => {\n\n        // console.log(\"PROPS: \", props)\n\n        let gameID = props.GameId\n        \n        let betID = nanoid(6)\n        let awayTeamName = formatTeamName(props.AwayTeamName)\n        let homeTeamName = formatTeamName(props.HomeTeamName)\n        let betType = 'moneyLine'\n        let homeMoneyLine = props.AlternateMarketPregameOdds[0].HomeMoneyLine\n        let awayMoneyLine = props.AlternateMarketPregameOdds[0].AwayMoneyLine\n        let betPending = true\n\n        let newBet = Bet({gameID, betID, betType, homeMoneyLine, awayMoneyLine, awayTeamName, homeTeamName, betPending})\n\n        dispatch(pendingBetAdded(newBet))\n        toggleModal()\n\n        return newBet\n    }\n\n    hideModal = () => {\n        setShowModal(false)\n    }\n        return(\n            <>\n                    {selectedLeague == \"MLB\" && \n                        isLoading ?\n                            <Text>Generating Game Data...</Text> :\n                                <>\n                            {showModal ?\n                                // <View style={{backgroundColor: 'khaki'}}> \n                                <Modal\n                                // animationIn={'slideInUp'}\n                                backdropOpacity={0}\n                                // animationInTiming={600}\n                                backdropTransitionInTiming={0}\n                                // hasBackdrop={false}\n                                style={{borderRadius: '10 10 0 0',justifyContent: 'flex-end',\n                                shadowColor: \"#000\",\n                                shadowOffset: {\n                                    width: 0,\n                                    height: 6,\n                                },\n                                shadowOpacity: 0.39,\n                                shadowRadius: 8.30,\n                                \n                                elevation: 13,}}\n                                    isVisible={showModal}\n                                    \n                                    // coverScreen={false}\n                                    // propagateSwipe\n                                    onBackdropPress={() => {\n                                        setShowModal(false)\n                                    }}\n                                    onRequestClose={() => {\n                                        Alert.alert('Modal has been closed.');\n                                    }}>\n                                        <View style={{backgroundColor: '#161616', height: '60%', borderRadius: 24, justifyContent: 'flex-end'}}>\n                                <ScrollView contentContainerStyle={styles.modalScrollView}>\n                                    <View style={{}}>\n                                <PendingBetslip />\n                                </View>\n                                </ScrollView>\n                                <Button title={'Press Me'}>Press Me</Button>\n                                </View>\n                                </Modal> \n                                // </View>\n                             :\n                                <ScrollView>\n                                <View style={styles.gameList}>\n                                {scheduleData.map((scheduleObj) => {\n                                    return (\n                                        <View style={styles.gameListItem} key={scheduleObj.GameId}>\n                                            \n                                            <View style={styles.gameListItemRow}>\n                                                <Text style={styles.tealText}>{formatDate(scheduleObj.DateTime)}</Text>\n                                                <Text style={styles.lightText}>{scheduleObj.Name}</Text>\n                                            </View>\n\n                                            <View style={styles.gameListItemRow}>\n                                            <View style={styles.teamInfo}>\n                                            <Image style={styles.gameListTeamLogo} source={imageSelect(scheduleObj.AwayTeamName)}></Image>\n                                            {/* <Text style={styles.lightText}>{this.formatTeamName(scheduleObj.HomeTeam)}</Text> */}\n                                            </View>\n                                            <View style={styles.betInfo}>\n                                                <View style={styles.betBox}>\n                                                    <Text style={styles.lightText}>{scheduleObj.AlternateMarketPregameOdds[0].AwayPointSpread}</Text>\n                                                    </View>\n                                                <TouchableOpacity onPress={() => createMoneyLine(scheduleObj)} style={styles.betBox}>\n                                                    <Text style={styles.lightText}>{scheduleObj.AlternateMarketPregameOdds[0].AwayMoneyLine}</Text>\n                                                    </TouchableOpacity>\n                                                <View style={styles.betBox}>\n                                                    <Text style={styles.lightText}>{scheduleObj.AlternateMarketPregameOdds[0].AwayPointSpreadPayout}</Text>\n                                                    </View>\n                                            </View>\n                                            </View>\n\n                                            <View style={styles.gameListItemRow}>\n                                            <View style={styles.teamInfo}>\n                                            <Image style={styles.gameListTeamLogo} source={imageSelect(scheduleObj.HomeTeamName)}></Image>\n                                            {/* <Text style={styles.lightText}>{this.formatTeamName(scheduleObj.AwayTeam)}</Text> */}\n                                            </View>\n                                            <View style={styles.betInfo}>\n                                                <View style={styles.betBox}>\n                                                    <Text style={styles.lightText}>{scheduleObj.AlternateMarketPregameOdds[0].HomePointSpread}</Text>\n                                                    </View>\n                                                <TouchableOpacity onPress={() => createMoneyLine(scheduleObj.AlternateMarketPregameOdds[0].HomeMoneyLine)} style={styles.betBox}>\n                                                    <Text style={styles.lightText}>{scheduleObj.AlternateMarketPregameOdds[0].HomeMoneyLine}</Text>\n                                                    </TouchableOpacity>\n                                                <View style={styles.betBox}>\n                                                    <Text style={styles.lightText}>{scheduleObj.AlternateMarketPregameOdds[0].HomePointSpreadPayout}</Text>\n                                                    </View>\n                                            </View>\n                                            </View>\n                                        </View>\n                                        )\n                                    }).reverse()\n                                }\n                                </View> \n\n                            </ScrollView>\n                            }\n                                                        <View></View>\n                              </>  \n\n                        }\n\n            </> \n        )     \n}\n\nexport default GameList\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 25,\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    gameList: {\n        flexGrow: 1,\n        backgroundColor: '#161616',\n        color: '#fff',\n        width: '100%',\n        paddingBottom: 300\n    },\n    gameListTeamLogo: {\n        height: 82,\n        width: 82\n    },\n    lightText: {\n        color: '#fff',\n        fontSize: 14\n    }, \n    gameListItem: {\n        flexDirection: 'column',\n        padding: 6,\n        borderBottomColor: '#222',\n        borderBottomWidth: 1\n    },\n    gameListItemRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        paddingVertical: 2,\n    },\n    teamInfo: {\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'space-around',\n        // textAlign:  'left',\n        width: '20%',\n    },\n    betInfo: {\n        flexDirection: 'row',\n        width: '68%',\n        justifyContent: 'space-around',\n    },\n    betBox: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: 60,\n        height: 60,\n        // backgroundColor: '#114880',\n        // paddingHorizontal: 20,\n        borderRadius: 4,\n        borderWidth: 1,\n        borderColor:'#229999'\n    },\n    tealText: {\n        color: 'teal'\n    },\n    modalScrollView: {\n        // flexGrow: 1,\n        backgroundColor: '#262626',\n        borderRadius: 18,\n        // justifyContent: 'space-around',\n        // alignItems: 'center',\n        color: '#fff',\n        fontSize: 24,\n        padding: 20,\n        width: '100%',\n        zIndex: -999\n    },\n})\n","import  React, { useEffect, useState } from 'react'\nimport { Image, SafeAreaView, View, Text, TextInput, Button, Alert, StyleSheet, ActivityIndicator, ScrollView } from 'react-native'\n// import { Ionicons, FontAwesome5, FontAwesome } from '@expo/vector-icons'\nimport axios from 'axios'\n\nimport { Team, SportSelector } from '../Exports'\nimport Stadium from '../../assets/baseball-stadium.jpg'\nimport AdOne from '../../assets/ad-1.jpg'\n\nconst HomeScreen = () => {\n\n    const [news, setNews] = useState([])\n\n    useEffect(() => {\n        getNews()\n        getDate()\n    }, [])\n\n    getNews = async () => {\n        await axios.get('https://api.sportsdata.io/v3/mlb/scores/json/News?key=df194af6ada54af983b9667771d8aa72')\n        .then(res => {\n            res.data\n\n            setNews(res.data)\n            console.log(news)\n        })\n        .catch(err => console.log(\"Error getting news: \", err))\n\n    }\n\n    getDate = () => {\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n\n        today = mm + '/' + dd + '/' + yyyy;\n        console.log(\"Today: \", today)\n    }\n\n\n\n\n        return (\n            <>\n            <View style={{backgroundColor: '#161616', flex: 1}}>\n                <Image source={Stadium} style={{height: 200, alignSelf: 'center'}}></Image>\n                <View style={{alignContent: 'center'}}>\n                {/* <Image source={AdOne} style={{height: 100}}></Image> */}\n                <ScrollView style={{backgroundColor: '#161616', width: '100%'}}>\n                {news.map(article => {\n                    return (\n                        <View key={article.NewsID} style={{backgroundColor: '#222', width: '94%', alignSelf: 'center', padding: 20, marginVertical: 8}}>\n                            <Text style={{color: '#fff', fontSize: 20, paddingBottom: 8}}>{article.Title}</Text>\n                            <Text numberOfLines={3} style={{color: '#fff', fontSize: 16}}>{article.Content}</Text>\n                    </View>\n                    )\n                })}\n            \n            </ScrollView>\n                </View>\n            </View>\n\n            </>\n        )\n}\n\nexport default HomeScreen\n\n\nconst styles = StyleSheet.create({\n    gameList: {\n        // flexGrow: 1,\n        // backgroundColor: 'purple',\n        // color: '#fff',\n        // width: '100%'\n    },\n    imageContainer: {\n        width: '88%',\n        alignItems: 'center'\n    },\n    whiteText: {\n        color: '#fff'\n    }\n})\n","import React from 'react'\nimport { Image, StyleSheet, ScrollView, TouchableOpacity, Text, TextInput, View } from 'react-native'\n\nconst ProfileScreen = () => {\n    return (\n        <View style={styles.viewStyle}>\n            <View></View>\n\n        </View>\n    )\n}\n\nexport default ProfileScreen\n\nconst styles = StyleSheet.create({\n    viewStyle: {\n    backgroundColor: '#161616',\n    flex: 1, \n    }\n})","import React from 'react'\nimport { SafeAreaView, View, Text, TextInput, Button, Alert, StyleSheet, ActivityIndicator } from 'react-native'\n\nimport { SportSelector } from '../Exports'\n\nconst FavoritesScreen = (props) => {\n    return (\n        <View style={{backgroundColor: '#161616', flex: 1}}>\n            <SportSelector />\n        </View>\n    )\n}\n\nexport default FavoritesScreen","import React from 'react'\nimport { Text } from 'react-native'\n\nconst RewardsScreen = () => {\n    return (\n        <Text>Rewards Screen</Text>\n    )\n}\n\nexport default RewardsScreen","import  React, { useState } from 'react'\nimport { ScrollView, SegmentedControlIOSComponent, Text, TouchableOpacity, View } from 'react-native'\n\n\nimport BetSlip from '../bets/Betslip'\nimport PendingBetslip from '../bets/PendingBetslip'\n\nconst BetslipScreen = (props) => {\n\n    let renderedView\n\n    const decideBetSlipContent = (props) => {\n        \n        props = 'showPending' ?\n        renderedView = <View><PendingBetslip /></View> :\n        renderedView = <View><BetSlip /></View>\n    }  \n\n    return (\n        <>\n        <View>\n        <TouchableOpacity onPress={() => {decideBetSlipContent('showPending')}}>\n            <Text>Show Pending</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => {decideBetSlipContent('showPlaced')}}>\n            <Text>Show Placed</Text>\n        </TouchableOpacity>\n        </View>\n\n        <ScrollView>\n            {renderedView}\n        </ScrollView>\n        </>\n    )\n}\n\nexport default BetslipScreen","import React, { Children, useState, useEffect } from 'react'\nimport { SafeAreaView, View, Text, TextInput, Button, Alert, StyleSheet, ActivityIndicator, ScrollView, FlatList, TouchableOpacity } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { Ionicons, FontAwesome5 } from '@expo/vector-icons'\nimport { element } from 'prop-types'\n\nimport GameList from '../games/GameList'\nimport { HomeScreen } from '../screens'\n\nconst SportSelector = () => {\n\n    const activeColor = \"#fff\"\n    const inactiveColor = \"purple\"\n\n    const [selectedSport, setSelectedSport] = useState('')\n    const [selectedLeague, setSelectedLeague] = useState('')\n    const [isActive, setIsActive] = useState(!isActive)\n    const [iconColor, setIconColor] = useState(activeColor)\n\n    const baseBallLeagues = [\n        \"MLB\", \"MiLB\", \"National League\", \"American League\", \"NCAA\"\n    ]\n\n    const footballLeagues = [\n        \"NFL\", \"NFC\", \"AFC\", \"NCAA\"\n    ]\n\n    const sportIcons = [\n    \n                <TouchableOpacity onPress={() => showLeagues(\"baseball\")} key={\"baseball\"}>\n                  <Ionicons style={styles.iconPadding} name=\"baseball-outline\" key={\"_baseball\"} size={48} color={iconColor} />            \n                 </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"football\")} key={\"football\"}>\n                    <FontAwesome5 style={styles.icon} name=\"football-ball\" key={\"_football\"} size={38} color={iconColor} />            \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"soccer\")} key={\"soccer\"}>\n                    <Ionicons style={styles.icon} name=\"football-outline\" key={\"_soccer\"} size={48} color={iconColor} />           \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"basketball\")} key={\"basketball\"}>\n                    <FontAwesome5 style={styles.icon} name=\"basketball-ball\" key={\"_basketball\"} size={38} color={iconColor} />    \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"golf\")} key={\"golf\"}>\n                    <FontAwesome5 style={styles.icon} name=\"golf-ball\" key={\"_golf\"} size={38} color={iconColor} />           \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"tennis\")} key={\"tennis\"}>\n                    <Ionicons style={styles.icon} name=\"tennisball-outline\" key={\"_tennis\"} size={48} color={iconColor} />               \n                </TouchableOpacity>,\n\n                <TouchableOpacity style={styles.iconPadding} onPress={() => showLeagues(\"horse\")} key={\"horse\"}>\n                    <FontAwesome5 style={styles.icon} name=\"horse-head\" key={\"_horse\"} size={38} color={iconColor} />           \n                </TouchableOpacity>,\n    ]\n\n    const showLeagues = (props) => {\n        setSelectedSport(props)\n\n        switch (selectedSport) {\n            case \"baseball\":\n                console.log(\"from switch\")\n                break\n        }\n\n\n        console.log(selectedSport)\n    }\n\n    const selectLeague = (props) => {\n        setSelectedLeague(props)\n        console.log(props)\n\n    }\n\n    const sayHello = () => {\n        console.log(\"hello\")\n    }\n\n    const toggleActive = () => {\n        // this.childData.setIsActive( {isActive: !isActive })\n        console.log(isActive)\n    }\n\n    // const [schedules, setSchedules] = useState([\n    //     // schedules: []\n    // ])\n\n    // useEffect(() => {\n    //     getSchedules()\n    // }, [])\n\n    // const getSchedules = async () => {\n    //     await axios.get('https://fly.sportsdata.io/v3/mlb/scores/json/Games/2021?key=df194af6ada54af983b9667771d8aa72')\n    //     .then(res => {\n\n    //         res.data\n\n    //         const scheduleData = res.data\n    //         setSchedules(scheduleData)\n    //         console.log(schedules)\n    //     })\n    //     .catch(err => console.log(\"Error getting schedules: \", err))\n    // }\n\n    // function handleIconColorChange(props) {\n\n    //     if (props == selectedSport) {\n    //         setActive(props)\n    //         console.log(\"Props!\", props)\n    //     }\n    //     console.log(props)\n    //     // setIconColor('#fff') ? setIconColor('purple') : \n\n    // }\n\n    // onpress turns the icon white: activeColor, inactiveColor\n    // if the icon is white, no other elements in the array can have a white icon\n    // search the elements in the array to see if their icon is white\n    // if it's white, turn it back to grey\n\n    return (\n        <>\n        <View>\n            <ScrollView contentContainerStyle={styles.sportSelectContainer} horizontal={true}>\n                \n                 {sportIcons}\n                \n            </ScrollView>\n            <ScrollView contentContainerStyle={styles.leagueSelectContainer} horizontal={true}>\n                {selectedSport == \"baseball\" &&\n                    baseBallLeagues.map((baseballLeague) => {\n                        return(\n                            <View style={styles.leagueSelectContainer} key={baseballLeague}>\n                                <TouchableOpacity onPress={() => selectLeague(baseballLeague)}><Text style={styles.leagueNames}>{baseballLeague}</Text></TouchableOpacity>\n                           </View>\n                        )\n                    })\n                }\n                {selectedSport == \"football\" &&\n                    footballLeagues.map((footballLeague) => {\n                        return (\n                            <View>\n                            <TouchableOpacity onPress={() => selectLeague(footballLeague)}><Text style={styles.leagueNames}>{footballLeague}</Text></TouchableOpacity>\n                        </View>\n                        )\n                    })\n                }\n                {selectedSport == \"soccer\" &&\n                    soccerLeagues.map((soccerLeague) => {\n                        return (\n                            <View>\n                            <TouchableOpacity onPress={() => selectLeague(soccerLeague)}><Text style={styles.leagueNames}>{soccerLeague}</Text></TouchableOpacity>\n                        </View>\n                        )\n                    })\n                }\n                {selectedSport == \"basketball\" &&\n                    basketballLeagues.map((basketballLeague) => {\n                            \n                            <TouchableOpacity onPress={() => selectLeague(basketballLeague)}><Text style={styles.leagueNames}>{basketballLeague}</Text></TouchableOpacity>\n                    })\n                    \n                }\n                {selectedSport == \"golf\" &&\n\n\n                    <View></View>\n\n                    \n\n                }\n                {selectedSport == \"tennis\" &&\n\n                    <View></View>\n\n                }\n                {selectedSport == \"horse\" &&\n                    <View></View>\n\n                }\n                \n            </ScrollView>\n        </View>\n        <View>\n            {selectedLeague == \"MLB\" &&\n            <View style={styles.gameList}>\n                <GameList selectedLeague={selectedLeague}/>\n            </View>\n            }\n\n        </View>\n        </>\n    )\n}\n\nexport default SportSelector\n\nconst styles = StyleSheet.create({\n    sportSelectContainer: {\n        flexGrow: 1,\n        backgroundColor: '#161616',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        color: '#fff',\n        paddingHorizontal: 100,\n        height: 90\n    },\n    leagueSelectContainer: {\n        flexGrow: 1,\n        backgroundColor: '#262626',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        paddingHorizontal: 10,\n        color: '#fff',\n        paddingTop: 10\n    },\n    icon: {\n        padding: 0, \n    },\n    leagueNames: {\n        color: '#fff',\n        height: 40,\n    },\n    iconPadding: {\n        paddingLeft: 10,\n        paddingRight: 10\n    },\n\n\n})\n\n","import React from 'react'\nimport { Image, SafeAreaView, View, Text, TextInput, Button, Alert, StyleSheet, ActivityIndicator } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { AntDesign } from '@expo/vector-icons';\n\nimport { SportSelector } from './sports';\nimport { FavoritesScreen } from './Exports';\nimport Logo from '../assets/logo.png'\nimport { RewardsScreen } from './Exports';\n\nconst Header = (props) => {\n\n    return (\n        <>\n        <View>\n            <LinearGradient \n            colors={['#161616', '#2D2A2A']}\n            start={[0, 1]}\n            end={[1, 0]}\n            style={styles.viewStyle}\n            >\n                <View style={styles.headerContainer}>\n                <AntDesign name=\"menufold\" size={24} color=\"#d49e0f\" />\n                <Image source={Logo}></Image>\n                <Text>$2764</Text>\n                </View>\n            </LinearGradient>\n            \n        </View>\n        \n        \n        </>\n    )\n}\n\nexport default Header\n\nconst styles = StyleSheet.create({\n    viewStyle: {\n    backgroundColor: '#161616',\n    paddingTop: 40,\n    height: 120,\n    alignItems: 'center'\n    }, \n    whiteText: {\n        color: '#fff'\n    },\n    headerContainer: {\n        width: '96%',\n        flexDirection: 'row',\n        alignItems: 'baseline',\n        justifyContent: 'space-between'\n    }\n})","import React from 'react'\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Game, GameList, SportSelector, Team, HomeScreen, ProfileScreen, RewardsScreen, BetslipScreen, FavoritesScreen } from '../components/Exports'\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst Tab = createBottomTabNavigator()\n\nconst CustomTabBarButton = ({children, onPress}) => (\n\n    <TouchableOpacity\n    style={{\n        top: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n    }}\n    onPress={onPress}>\n        <View style={{\n            width: 60,\n            height: 60,\n            borderRadius: 50,\n            backgroundColor: '#161616'\n        }}>\n            {children}\n        </View>\n    </TouchableOpacity>\n)\n\nconst Tabs = () => {\n\n    const tabIconColor = '#d49e0f'\n    // const tabIconColor = '#999'\n\n\n    return (\n        <Tab.Navigator\n            tabBarOptions={{\n                showLabel: false,\n                style: {\n                    position: 'absolute',\n                    // bottom: 25,\n                    // left: 10,\n                    // right: 10,\n                    elevation: 0,\n                    backgroundColor: '#161616',\n                    // borderRadius: 50,\n                    height: 90,\n                    ...styles.shadow\n                }\n            }}\n        >\n            <Tab.Screen name=\"Home\" component={HomeScreen} options={{\n                tabBarIcon: ({focused}) => (\n                     <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\n                        <Text>\n                            <Ionicons name='home' size={28} color={tabIconColor} />\n                        </Text>\n                        {/* <Text style={styles.whiteText}> */}\n                            {/* Home */}\n                        {/* </Text> */}\n                     </View>\n                )  \n            }}/>\n                        <Tab.Screen name=\"Favorites\" component={FavoritesScreen} options={{\n                tabBarIcon: ({focused}) => (\n                    <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\n                    <Text>\n                        <Ionicons name='star' size={28} color={tabIconColor} />\n                    </Text>\n                    {/* <Text style={styles.whiteText}>\n                        Favorites\n                    </Text> */}\n                    </View>\n                )\n            }}/>         \n            <Tab.Screen name=\"Betslip\" component={BetslipScreen} options={{\n                tabBarIcon: ({focused}) => (\n                    <Text>\n                        <Ionicons name='receipt' size={40} color={tabIconColor} />\n                    </Text>\n    \n                ),\n                tabBarButton: (props) => (\n                    <CustomTabBarButton {...props} />\n                )   \n\n                // tabBarIcon: \n            }}/>\n\n                <Tab.Screen name=\"Rewards\" component={RewardsScreen} options={{\n                tabBarIcon: ({focused}) => (\n                    <View style={{alignItems :'center', justifyContent: 'center', top: 10}}>\n                    <Text>\n                        <Ionicons name='ribbon' size={28} color={tabIconColor} />\n                    </Text>\n                    {/* <Text style={styles.whiteText}>\n                        Rewards\n                    </Text> */}\n                    </View>\n                )   \n            }}/>\n\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} options={{\n                tabBarIcon: ({focused}) => (\n                    <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\n                        <Text>\n                            <Ionicons name='person-circle-sharp' size={28} color={tabIconColor} />\n                        </Text>\n                        {/* <Text style={styles.whiteText} >\n                            Profile\n                        </Text> */}\n                    </View>\n                )\n            }}/>\n\n        </Tab.Navigator>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    shadow: {\n        shadowColor: '#7f5df0',\n        shadowOffset: {\n            width: 0,\n            height: 10\n        },\n        shadowOpacity: 0.24,\n        shadowRadius: 3.6,\n        elevation: 5\n    },\n    whiteText: {\n        color: '#fff',\n        fontSize: 10\n    }\n})\n\nexport default Tabs\n\n        {/* //         screenOptions={({ route }) => ({\n        //         tabBarIcon: ({ focused, color, size }) => {\n        //         let iconName;\n\n        //         if (route.name === 'Home') {\n        //         iconName = focused\n        //             ? 'home' : 'home'\n        //         } else if (route.name === 'Profile') {\n        //         iconName = focused ? 'person-circle-sharp' : 'person-circle-sharp'\n        //         } else if (route.name === 'Rewards') {\n        //             iconName = focused ? 'ribbon' : 'ribbon'\n        //         } else if (route.name === 'Betslip') {\n        //             iconName = focused ? 'receipt' : 'receipt'\n        //         } else if (route.name === 'Favorites') {\n        //             iconName = focused ? 'star' : 'star'\n        //         }\n\n        //         return \n        //         },\n        //     })} \n        //     tabBarOptions={{\n        //         initialRouteName: \"Home\",\n        //         activeBackgroundColor: '#161616',\n        //         inactiveBackgroundColor: '#161616',\n        //         activeTintColor: '#1398A0',\n        //         inactiveTintColor: 'grey',\n        //         style: {height: 100},\n        // }}> */}","import React, { Component } from 'react'\nimport { SafeAreaView, View, Text, TextInput, Button, Alert, StyleSheet, ActivityIndicator } from 'react-native'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\n// import rootReducer from './reducers'\n\n// import { SafeAreaProvider, SafeAreaInsetsContext, useSafeAreaInsets } from 'react-native-safe-area-context'\nimport { NavigationContainer } from '@react-navigation/native'\n// import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\n\n\nimport Header from './components/Header'\nimport Tabs from './navigation/Tabs'\n\nexport default class Main extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <Provider store={store}>   \n                <NavigationContainer style={styles.darkGreyBackground}>\n                <Header /> \n                    <Tabs />\n                </NavigationContainer>\n            </Provider>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n\n    redText: {\n        color: '#ed1532'\n    },\n    darkGreyBackground: {\n        backgroundColor: '#161616',\n    }\n\n});","// import { StatusBar } from 'expo-status-bar';\nimport React from 'react'\nimport Main from './src/Main'\n\nfunction App() {\n  return <Main />\n\n}\n\nexport default App\n","module.exports = __webpack_public_path__ + \"static/media/ARI.e6a3f4b6.png\";","module.exports = __webpack_public_path__ + \"static/media/ATL.33549499.png\";","module.exports = __webpack_public_path__ + \"static/media/BAL.7d0bbce4.png\";","module.exports = __webpack_public_path__ + \"static/media/BOS.d4611276.png\";","module.exports = __webpack_public_path__ + \"static/media/CHC.94fcc29d.png\";","module.exports = __webpack_public_path__ + \"static/media/CHW.6718da50.png\";","module.exports = __webpack_public_path__ + \"static/media/CIN.6f257b54.png\";","module.exports = __webpack_public_path__ + \"static/media/CLE.18e7ea41.png\";","module.exports = __webpack_public_path__ + \"static/media/COL.4646977b.png\";","module.exports = __webpack_public_path__ + \"static/media/DET.927cef0f.png\";","module.exports = __webpack_public_path__ + \"static/media/HOU.371a657e.png\";","module.exports = __webpack_public_path__ + \"static/media/KC.17c4db9d.png\";","module.exports = __webpack_public_path__ + \"static/media/LAA.89f871ac.png\";","module.exports = __webpack_public_path__ + \"static/media/LAD.1d2846ba.png\";","module.exports = __webpack_public_path__ + \"static/media/MIA.1c2d2a54.png\";","module.exports = __webpack_public_path__ + \"static/media/MIL.b3f883b2.png\";","module.exports = __webpack_public_path__ + \"static/media/MIN.8d42d261.png\";","module.exports = __webpack_public_path__ + \"static/media/NYM.8402b56c.png\";","module.exports = __webpack_public_path__ + \"static/media/NYY.a5b056dc.png\";","module.exports = __webpack_public_path__ + \"static/media/OAK.100b8bce.png\";","module.exports = __webpack_public_path__ + \"static/media/PHI.b6c87a68.png\";","module.exports = __webpack_public_path__ + \"static/media/PIT.f38d5a3a.png\";","module.exports = __webpack_public_path__ + \"static/media/SD.1cac4157.png\";","module.exports = __webpack_public_path__ + \"static/media/SEA.5c39604e.png\";","module.exports = __webpack_public_path__ + \"static/media/SF.412651de.png\";","module.exports = __webpack_public_path__ + \"static/media/STL.de949ec5.png\";","module.exports = __webpack_public_path__ + \"static/media/TB.b2017217.png\";","module.exports = __webpack_public_path__ + \"static/media/TEX.07cf7d2a.png\";","module.exports = __webpack_public_path__ + \"static/media/TOR.42933e89.png\";","module.exports = __webpack_public_path__ + \"static/media/WSH.d15bd32c.png\";","module.exports = __webpack_public_path__ + \"static/media/ad-1.1f8eec52.jpg\";"],"sourceRoot":""}